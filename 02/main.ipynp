import numpy as np
import pandas as pd
import matplotlib.pyplot as plt
from sklearn.cluster import KMeans
import seaborn as sns

sns.set()
df = pd.read_csv('credit_card.csv')
plt.scatter(df['BALANCE'],df['PAYMENTS'],df['BALANCE_FREQUENCY'],df['CASH_ADVANCE_FREQUENCY'])
plt.xlim(0,6000)
plt.ylim(0,6000)
plt.show()


x = df.iloc[:, 1:3]
kmeans = KMeans(8)
kmeans.fit(x)


identified_clusters = kmeans.fit_predict(x)

data_with_clusters = df.copy()
data_with_clusters['cluster'] = identified_clusters
data_with_clusters.head()


data_with_clusters.plot(kind='scatter', x='BALANCE_FREQUENCY', y='PURCHASES', s=32, alpha=.8)
plt.gca().spines[['top', 'right',]].set_visible(False)

data_with_clusters['PURCHASES'].plot(kind='line', figsize=(8, 4), title='PURCHASES')
plt.gca().spines[['top', 'right']].set_visible(False)

data_with_clusters.plot(kind='scatter', x='ONEOFF_PURCHASES', y='INSTALLMENTS_PURCHASES', s=32, alpha=.8)
plt.gca().spines[['top', 'right',]].set_visible(False)

wcss = list()
number_clusters = range(1,4)

for i in number_clusters:
  kmeans = KMeans(i)
  kmeans.fit(x)
  wcss_iter = kmeans.inertia_
  wcss.append(wcss_iter)


plt.plot(number_clusters, wcss)


kmeans = KMeans(n_clusters=4, init='k-means++', max_iter=300, n_init=10, random_state=0)
pred_y = kmeans.fit_predict(x)
x.plot(kind='scatter', x='BALANCE', y='BALANCE_FREQUENCY', s=32, alpha=.8)
plt.gca().spines[['top', 'right',]].set_visible(False)
plt.scatter(kmeans.cluster_centers_[:,0], kmeans.cluster_centers_[:, 1], s=300, c='red')
plt.show()